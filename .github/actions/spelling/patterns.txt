# See https://github.com/check-spelling/check-spelling/wiki/Configuration-Examples:-patterns

# GitHub SHAs
\bapi.github\.com/repos/[^/]+/[^/]+/[^/]+/[0-9a-f]+\b
(?:\[`?[0-9a-f]+`?\]\(https:/|)/(?:www\.|)github\.com/[^/)]+/[^/)]+(?:/[^/)]+/[0-9a-f]+(?:[-0-9a-zA-Z/#.]*|)\b|)
\bgithub\.com/[^/]+/[^/]+[@#][0-9a-f]+\b
# githubusercontent
/[-a-z0-9]+\.githubusercontent\.com/[-a-zA-Z0-9?&=_\/.]*
# gist github
\bgist\.github\.com/[^/]+/[0-9a-f]+
# git.io
\bgit\.io/[0-9a-zA-Z]+
# GitHub JSON
"node_id": "[-a-zA-Z=;:/0-9+]*"
# Contributor
\[[^\]]+]\(https://github\.com/[^/]+\)
# GHSA
GHSA(?:-[0-9a-z]{4}){3}

# GitLab
\bgitlab\.[^/]*/\S+/\S+/commit/[0-9a-f]{7,16}#[0-9a-f]{40}\b
\bgitlab\.[^/]*/\S+/\S+/-/merge_requests/\d+/diffs#[0-9a-f]{40}\b
\bgitlab\.[^/]*/uploads/[-a-zA-Z=;:/0-9+]*
\bgitlab\.[^/]*/[^/]+/[^/]+/commits?/[0-9a-f]+\b

# medium
link\.medium\.com/[a-zA-Z0-9]+
\bmedium\.com/\@[^/]+/[-\w]+

# stackexchange -- https://stackexchange.com/feeds/sites
\b(?:askubuntu|serverfault|stack(?:exchange|overflow)|superuser).com/(?:questions/\w+/[a-z-]+|a/)

# baserow
\bfiles\.baserow\.io/[/\w]+
/media/thumbnails/[/\w]+

# dl.airtable.com
\bdl\.airtable\.com/[\w.]+/\w+

# uuid:
\b[0-9a-fA-F]{8}-(?:[0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}\b

name"?: (["']).*\g{-1}
buf\.write\(".*"

# URL escaped characters
\%[0-9A-F]{2}

# hex digits including css/html color classes:
\\u[0-9a-f]{4}
(?:[\\0][xX]|\\u|[uU]\+|#x?|\%23)[0-9a-fA-FgGrR_]{2,}(?:[uUlL]{0,3}|u\d+)\b

\b[0-9a-f]{40,}\b

# Update Lorem based on your content (requires `ge` and `w` from https://github.com/jsoref/spelling; and `review` from https://github.com/check-spelling/check-spelling/wiki/Looking-for-items-locally )
# grep '^[^#].*lorem' .github/actions/spelling/patterns.txt|perl -pne 's/.*i..\?://;s/\).*//' |tr '|' "\n"|sort -f |xargs -n1 ge|perl -pne 's/^[^:]*://'|sort -u|w|sed -e 's/ .*//'|w|review -
# Warning, while `(?i)` is very neat and fancy, if you have some binary files that aren't proper unicode, you might run into:
## Operation "substitution (s///)" returns its argument for non-Unicode code point 0x1C19AE (the code point will vary).
## You could manually change `(?i)X...` to use `[Xx]...`
## or you could add the files to your `excludes` file (a version after 0.0.19 should identify the file path)
# Lorem
(?:\w|\s|[,.])*\b(?i)(?:accumsan|adipiscing|aenean|aliquam|aliquet|amet|aptent|consectetur|curae|cursus|dolor|eget|euismod|eros|fringilla|iaculis|ipsum|lacus|libero|ligula|lorem|magna|neque|nulla|nunc|porttitor|suscipit|tempus|urna)\b(?:\w|\s|[,.])*

# set arguments
\bset\s+-[abefimouxE]+\b

# tar arguments
\b(?:\\n|)tar(?:\.exe|)(?:(?:\s+--[-a-zA-Z]+|\s+-[a-zA-Z]+|\s[a-z]+)(?:=[^ ]*|))+

# acceptable duplicates
# ls directory listings
[-bcdlpsw](?:[-r][-w][-sx]){3}\s+\d+\s+(\S+)\s+\g{-1}\s+\d+\s+
# C types
\s(auto|long|LONG|table) \g{-1}\s
# javadoc / .net
(?:\@(?:groupname|param)|(?:public|private)(?:\s+static|\s+readonly)*)\s+(\w+)\s+\g{-1}\s

# ignore long runs of a single character:
\b([A-Za-z])\g{-1}{3,}\b
